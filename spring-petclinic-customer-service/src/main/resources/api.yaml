openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:7773
    description: Generated server url
tags:
  - name: owner
    description: Owner Resource
paths:
  /owners/{ownerId}:
    get:
      tags:
        - owner
      operationId: findOwner
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OwnerData'
    put:
      tags:
        - owner
      operationId: update
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerCommand'
        required: true
      responses:
        "204":
          description: No Content
  /owners:
    get:
      tags:
        - owner
        - store
      summary: Get all owners
      description: "Get all owners in one shot, no pagination support"
      operationId: findAll
      responses:
        "200":
          description: Success
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OwnerData'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OwnerData'
    post:
      tags:
        - owner
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerCommand'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OwnerData'
  /owners/{ownerId}/pets:
    post:
      tags:
        - pet-resource
      operationId: processCreationForm
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetCommand'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PetData'
  /owners/{ownerId}/pets/{petId}:
    post:
      tags:
        - pet-resource
      operationId: processUpdatingForm
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
        - name: petId
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetCommand'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PetData'
  /petTypes:
    get:
      tags:
        - pet-resource
      operationId: getPetTypes
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PetTypeData'
  /owners/*/pets/{petId}:
    get:
      tags:
        - pet-resource
      operationId: findPet
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PetData'
components:
  schemas:
    JsonNullableString:
      type: object
      properties:
        present:
          type: boolean
    OwnerCommand:
      required:
        - city
        - firstName
      type: object
      properties:
        firstName:
          $ref: '#/components/schemas/JsonNullableString'
        lastName:
          $ref: '#/components/schemas/JsonNullableString'
        address:
          $ref: '#/components/schemas/JsonNullableString'
        city:
          $ref: '#/components/schemas/JsonNullableString'
        telephone:
          $ref: '#/components/schemas/JsonNullableString'
    OwnerData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        address:
          type: string
        city:
          type: string
        telephone:
          type: string
        pets:
          type: array
          items:
            $ref: '#/components/schemas/PetData'
    PetData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        ownerName:
          type: string
        birthDate:
          type: array
          items:
            type: integer
        type:
          $ref: '#/components/schemas/PetTypeData'
    PetTypeData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    PetCommand:
      required:
        - birthDate
        - name
        - typeId
      type: object
      properties:
        birthDate:
          type: string
          format: date
        name:
          type: string
        typeId:
          type: integer
          format: int32

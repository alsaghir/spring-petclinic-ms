version: '3.8'

services:
  h2-server:
    image: oscarfonts/h2
    container_name: h2-server
    networks:
      - MyBridgeNetwork
    ports:
      - "9092:1521"
      - "81:81"
    volumes:
      - h2-data:/opt/h2-data
    environment:
      H2_OPTIONS: -ifNotExists

  zipkin-server:
    image: openzipkin/zipkin
    container_name: zipkin-server
    networks:
      - MyBridgeNetwork
    ports:
      - "9411:9411"

  promtail-server:
    image: grafana/promtail:2.8.0
    container_name: promtail-server
    command: --config.file=/mnt/config/promtail-config.yaml
    networks:
      - MyBridgeNetwork
    volumes:
      - type: bind
        source: ./docker/promtail/promtail-config.yaml
        target: /mnt/config/promtail-config.yaml
      - type: volume
        source: logVolume
        target: /var/log/services

  loki-server:
    image: grafana/loki:2.8.0
    container_name: loki-server
    command: --config.file=/mnt/config/loki-config.yaml
    networks:
      - MyBridgeNetwork
    ports:
      - "3100:3100"
    volumes:
      - ./docker/loki/loki-config.yaml:/mnt/config/loki-config.yaml

  prometheus-server:
    image: prom/prometheus
    container_name: prometheus-server
    networks:
      - MyBridgeNetwork
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/:/etc/prometheus/

  grafana-server:
    image: grafana/grafana-oss
    container_name: grafana-server
    networks:
      - MyBridgeNetwork
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
      - ./docker/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards

  initialize-logs:
    image: busybox
    command: sh -c 'touch /var/log/services/.initialized && chown -R 10000:10001 /var/log/services'
    volumes:
      - logVolume:/var/log/services
    networks:
      - MyBridgeNetwork

  config-server:
    build:
      context: .
      dockerfile: ./docker/spring-boot/Dockerfile
      args:
        SERVICE_NAME: spring-petclinic-config-server
    container_name: config-server
    ports:
      - "7771:7771"
    volumes:
      - logVolume:/workspace/app/log
    networks:
      - MyBridgeNetwork
    healthcheck:
      test: "curl --fail --silent config-server:7771/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  discovery-server:
    build:
      context: .
      dockerfile: ./docker/spring-boot/Dockerfile
      args:
        SERVICE_NAME: spring-petclinic-discovery-server
    container_name: discovery-server
    ports:
      - "7772:7772"
    volumes:
      - logVolume:/workspace/app/log
    environment:
      - CONFIG_SERVER_URL=http://config-server:7771/
    depends_on:
      config-server:
        condition:
          service_healthy
    networks:
      - MyBridgeNetwork
    healthcheck:
      test: "curl --fail --silent discovery-server:7772/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  admin-server:
    build:
      context: .
      dockerfile: ./docker/spring-boot/Dockerfile
      args:
        SERVICE_NAME: spring-petclinic-admin-server
    container_name: admin-server
    ports:
      - "7776:7776"
    volumes:
      - logVolume:/workspace/app/log
    environment:
      - CONFIG_SERVER_URL=http://config-server:7771/
      - DISCOVERY_SERVER_HOST=discovery-server
    depends_on:
      discovery-server:
        condition:
          service_healthy
    networks:
      - MyBridgeNetwork
    healthcheck:
      test: "exit 0"
      start_period: 10s

  customers-service:
    build:
      context: .
      dockerfile: ./docker/spring-boot/Dockerfile
      args:
        SERVICE_NAME: spring-petclinic-customer-service
    container_name: customers-service
    ports:
      - "7773:7773"
    volumes:
      - logVolume:/workspace/app/log
    environment:
      - CONFIG_SERVER_URL=http://config-server:7771/
      - H2HOST=h2-server
      - H2PORT=1521
      - DISCOVERY_SERVER_HOST=discovery-server
      - ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
      - SPRING_PROFILES_ACTIVE=default,h2
    depends_on:
      discovery-server:
          condition:
            service_healthy
      h2-server:
        condition: service_started
    networks:
      - MyBridgeNetwork
    healthcheck:
      test: "exit 0"
      start_period: 10s

  api-gateway:
    build:
      context: .
      dockerfile: ./docker/flutter-api-gateway/Dockerfile
      args:
        SERVICE_NAME: spring-petclinic-api-gateway
    container_name: api-gateway
    ports:
      - "7778:7778"
    volumes:
      - logVolume:/workspace/app/log
    environment:
      - CONFIG_SERVER_URL=http://config-server:7771/
      - DISCOVERY_SERVER_HOST=discovery-server
      - ZIPKIN_URL=http://zipkin-server:9411/api/v2/spans
      - BACKEND_HOST=http://localhost:7778
    depends_on:
      discovery-server:
        condition:
          service_healthy
    networks:
      - MyBridgeNetwork
    healthcheck:
      test: "exit 0"
      start_period: 10s

  test:
    image: maven:3-eclipse-temurin-17-alpine
    container_name: test
    command: /bin/sh -c 'cd /opt/app && mvn -pl spring-petclinic-test-service clean verify site -Dmaven.plugin.validation=VERBOSE'
    volumes:
      - ./:/opt/app
      - m2:/root/.m2
    environment:
      - BROWSER_HOST=firefox
    depends_on:
      api-gateway:
        condition:
          service_healthy
      customers-service:
        condition:
          service_healthy
      admin-server:
        condition:
          service_healthy
      discovery-server:
        condition:
          service_healthy
      config-server:
        condition:
          service_healthy
      firefox:
        condition:
          service_healthy
    networks:
      - MyBridgeNetwork

  firefox:
    image: selenium/standalone-firefox:latest
    container_name: firefox
    ports:
      - "4444:4444"
      - "7900:7900"
    shm_size: 2g
    networks:
      - MyBridgeNetwork
    healthcheck:
      test: "exit 0"
      start_period: 10s

networks:
  MyBridgeNetwork:
    driver: bridge

volumes:
  h2-data:
    driver: local
  logVolume:
    driver: local
  m2:
    driver: local